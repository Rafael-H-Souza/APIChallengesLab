version: "3.9"

services:

  db_lab_logistica:
    image: mongo:latest
    container_name: db_lab_logistica
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootLab
      MONGO_INITDB_DATABASE: db_Homologacao
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "mongodb://root:rootLab@localhost:27017/admin", "--eval", "db.runCommand({ ping: 1 }).ok" ]
      interval: 10s
      timeout: 5s
      retries: 8
      start_period: 10s
      
  api-lab_logistica:
    build:
      context: .
      dockerfile: Dockerfile
    image: rafaelsouzaio/api-logistica:latest
    container_name: api_logistica_container
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=docker
      - MONGO_URI=mongodb://root:rootLab@db_lab_logistica:27017/db_Homologacao?authSource=admin
    depends_on:
      db_lab_logistica:
        condition: service_healthy
    networks:
      - app-network
    command: >
      sh -c "npx wait-port db_lab_logistica:27017 --timeout=120000 &&
             node dist/server.js"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s

  

networks:
  app-network:
    driver: bridge
